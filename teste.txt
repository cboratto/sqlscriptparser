
ALTER TABLE SAFEPAY_ADM.TRANSACTION_CHECKOUT  ADD CONSTRAINT TRANCHEC_CK01  CHECK( IND_CHECKOUT_TYPE IN ('W',)) ENABLE NOVALIDATE;

ALTER TABLE SAFEPAY_ADM.TRANSACTION_CHECKOUT  ADD CONSTRAINT TRANCHEC_CK01  CHECK (IND_CHECKOUT_TYPE IN ('W', 'L', 'T', 'G', 'M', 'A', 'V')) ENABLE NOVALIDATE;

DECLARE
  RESOURCE_BUSY EXCEPTION;
  PRAGMA EXCEPTION_INIT(RESOURCE_BUSY, -00054);
  NAOEXECUTOU BOOLEAN := TRUE;
BEGIN
  WHILE NAOEXECUTOU
  LOOP
    BEGIN
      EXECUTE IMMEDIATE 'ALTER TABLE SAFEPAY_ADM.PRESENTATION_COMPONENT_CONFIG ADD NAM_XML VARCHAR2(60)';
      NAOEXECUTOU := FALSE;
    EXCEPTION
      WHEN RESOURCE_BUSY THEN
        DBMS_LOCK.SLEEP(SECONDS => 1);
      WHEN OTHERS THEN
        RAISE;
    END;
  END LOOP;
END;
/

CREATE INDEX SAFEPAY_ADM.PROM_IDX02 ON SAFEPAY_ADM.PROMOTION (IDT_PAYMENT_REQUEST_MODEL) TABLESPACE TSISAFEPAY01 INITRANS 8 ONLINE;

DECLARE
  RESOURCE_BUSY EXCEPTION;
  PRAGMA EXCEPTION_INIT(RESOURCE_BUSY, -00054);
  NAOEXECUTOU BOOLEAN := TRUE;
BEGIN
  WHILE NAOEXECUTOU
  LOOP
    BEGIN
      EXECUTE IMMEDIATE 'ALTER TABLE SAFEPAY_ADM.PRE_APPROVAL_PAYMENT_ORDER ADD DAT_RETRY DATE NULL';
      NAOEXECUTOU := FALSE;
	  DBMS_OUTPUT.PUT_LINE('COLUNA DAT_RETRY ADICIONADA');
    EXCEPTION
      WHEN RESOURCE_BUSY THEN
        DBMS_LOCK.SLEEP(SECONDS =>1);
      WHEN OTHERS THEN
        RAISE;
    END;
  END LOOP;
END;
/ 
COMMENT ON COLUMN SAFEPAY_ADM.PRE_APPROVAL_PAYMENT_ORDER.DAT_RETRY IS 'DATA DE RETENTATIVA DA ORDEM DE PAGAMENTO';


-- 02: RAFAEL RIBALDO - ISTAMBUL - 01/08/16 - 09:00
DECLARE
  RESOURCE_BUSY EXCEPTION;
  PRAGMA EXCEPTION_INIT(RESOURCE_BUSY, -00054);
  NAOEXECUTOU BOOLEAN := TRUE;
BEGIN
  WHILE NAOEXECUTOU
  LOOP
    BEGIN
      EXECUTE IMMEDIATE 'ALTER TABLE SAFEPAY_ADM.PROMOTION ADD IDT_PAYMENT_REQUEST_MODEL NUMBER(10,0) NULL';
      NAOEXECUTOU := FALSE;
	  DBMS_OUTPUT.PUT_LINE('COLUNA IDT_PAYMENT_REQUEST_MODEL ADICIONADA');
    EXCEPTION
      WHEN RESOURCE_BUSY THEN
        DBMS_LOCK.SLEEP(SECONDS =>1);
      WHEN OTHERS THEN
        RAISE;
    END;
  END LOOP;
END;
/
COMMENT ON COLUMN SAFEPAY_ADM.PROMOTION.IDT_PAYMENT_REQUEST_MODEL IS 'REFERENCIA A CONFIGURACAO DE SOLICITACAO DE PAGAMENTO';

-- 03
-- FK
DECLARE
  RESOURCE_BUSY EXCEPTION;
  PRAGMA EXCEPTION_INIT(RESOURCE_BUSY, -00054);
  NAOEXECUTOU BOOLEAN := TRUE;
BEGIN
  WHILE NAOEXECUTOU
  LOOP
    BEGIN
      EXECUTE IMMEDIATE 'ALTER TABLE SAFEPAY_ADM.PROMOTION ADD CONSTRAINT PAYMREQUMODE_PROM_FK FOREIGN KEY (IDT_PAYMENT_REQUEST_MODEL) REFERENCES SAFEPAY_ADM.PAYMENT_REQUEST_MODEL (IDT_PAYMENT_REQUEST_MODEL) ENABLE NOVALIDATE';
      NAOEXECUTOU := FALSE;
	  DBMS_OUTPUT.PUT_LINE('CONSTRAINT PAYMREQUMODE_PROM_FK ADICIONADA');
    EXCEPTION
      WHEN RESOURCE_BUSY THEN
        DBMS_LOCK.SLEEP(SECONDS =>1);
      WHEN OTHERS THEN
        RAISE;
    END;
  END LOOP;
END;
/
   
-- 04
-- INDEX P/ FK
CREATE INDEX SAFEPAY_ADM.PROM_IDX02 ON SAFEPAY_ADM.PROMOTION (IDT_PAYMENT_REQUEST_MODEL) TABLESPACE TSISAFEPAY01 INITRANS 8 ONLINE;






DECLARE
  RESOURCE_BUSY EXCEPTION;
  PRAGMA EXCEPTION_INIT(RESOURCE_BUSY, -00054);
  NAOEXECUTOU BOOLEAN := TRUE;
BEGIN
  WHILE NAOEXECUTOU
  LOOP
    BEGIN
      EXECUTE IMMEDIATE 'ALTER TABLE SAFEPAY_ADM.TRANSACTION_CHECKOUT  ADD CONSTRAINT TRANCHEC_CK01  CHECK (IND_CHECKOUT_TYPE IN (''W'', ''L'', ''T'', ''G'', ''M'', ''A'', ''V'')) ENABLE NOVALIDATE';
      NAOEXECUTOU := FALSE;
			DBMS_OUTPUT.PUT_LINE('RECRIADA TRANCHEC_CK01'); 
    EXCEPTION
      WHEN RESOURCE_BUSY THEN
        DBMS_LOCK.SLEEP(SECONDS =>1);
      WHEN OTHERS THEN
        RAISE;
    END;
  END LOOP;
END; 
/